
int main() {
  unsigned char ux = 25, uy = 117;
  unsigned char x_and_y, x_or_y, x_xor_y, not_x;
  // ux = 00011001, uy = 01110101
  x_and_y = ux & uy;
  // ux & uy = 00010001
  x_or_y = ux | uy;
  // ux | uy = 01111101
  x_xor_y = ux ^ uy;
  // ux ^ uy = 01101100
  not_x = ~ux;
  // ~ux = 11100110
  return 0;
}


int main() {
  char ux = 25, uy = 117;
  int x_and_y, x_or_y, x_xor_y, not_x;
  // ux = 00011001, uy = 01110101
  x_and_y = ux & uy;
  // ux & uy = 00010001
  x_or_y = ux | uy;
  // ux | uy = 01111101
  x_xor_y = ux ^ uy;
  // ux ^ uy = 01101100
  not_x = ~ux;
  // ~ux = 11100110
  return 0;
}

int main() {
  unsigned char ux = 117, left_x, right_x;
  // ux = 01110101
  left_x = ux << 3;
  // left_x = 10101000
  right_x = ux >> 2;
  // right_x = 00011101
}

int main() {
  char ux = 117, left_x, right_x;
  int ileft, iright;
  // ux = 01110101
  left_x = ux << 3;
  // left_x = 10101000
  // ~10101000 + 1 = 01010111 + 1 = 01011000
  right_x = ux >> 2;
  // right_x = 00011101
  ileft = left_x;
  iright = right_x;
}

int main() {
  char ux = -1, uy = -10;
  // ux = 11111111, uy = 11110110
  // ~00000001 + 1 = 11111110 + 1 = 11111111
  // ~00001010 + 1 = 11110101 + 1 = 11110110
  int left_ux, right_ux, left_uy, right_uy;
  left_ux = ux << 2;
  // left_ux = 11111100
  // ~11111100 + 1 = 00000011 + 1 = 00000100
  right_ux = ux >> 3;
  // right_ux = 11111111
  left_uy = uy << 2;
  // left_uy = 11011000 
  // (~11011000 + 1 = 00100111 + 1 = 00101000) 
  right_uy = uy >> 3;
  // right_uy = 11111110 
  // (~11111110 + 1 = 00000001 + 1 = 00000010)
}

int main() {
  unsigned char mask = 1;
  unsigned char mask2 = 1 << 2;
  unsigned char mask7 = 1 << 7;
  unsigned char mask8 = 1 << 8;
  unsigned char mask3 = mask7 >> 4;
}

int main() {
  unsigned char x = 43, x5, x2, x3;
  // x = 00101011
  x5 = x & ~(1 << 5);
  // x5 = 00001011
  x2 = x | (1 << 2);
  // x2 = 01001111
  x3 = x ^ (1 << 3);
  // x3 = 01000011
}

#include<iostream>

using namespace std;

string bin(unsigned char x)
{
  unsigned char mask = 1 << 7;
  string s="";
  while (mask)
  {
    s += x & mask ? '1' : '0';
    mask >>= 1;
  }
  return s;
}

int main() {
  unsigned char x = 43, x5, x2, x3;
  cout << " x  = " << bin(x) << endl;
  x5 = x & ~(1 << 5);
  cout << " x5 = " << bin(x5) << endl;
  x2 = x | (1 << 2);
  cout << " x2 = " << bin(x2) << endl;
  x3 = x ^ (1 << 3);
  cout << " x3 = " << bin(x3) << endl;
}

int main() {
  unsigned int x = 0, summa = 0;
  do
  {
      cin >> x;
      summa ^= x;
  }
  while(x);
  cout << summa;
}

int main() {
  unsigned char x = 148, x3, x2;
  // x = 10010100
  x3 = x >> 3;
  // x3 = 00010010 = 18(10), 18 * 8 = 144
  x2 = x << 2;
  // x2 = 01010000, 148 * 4 = 592, 592 % 256 = 80
}
